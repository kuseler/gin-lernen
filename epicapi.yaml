openapi: 3.0.3
info:
  title: Epic Recipe API
  description: API for managing users and recipes
  version: 2.0.0
servers:
  - url: /api/v2
    description: Main API server
paths:
  /users/all:
    get:
      summary: Get all users
      description: Retrieve all users, excluding their passwords.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/register:
    post:
      summary: Register a new user
      requestBody:
        description: User registration details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User registered successfully

  /users/log-in:
    post:
      summary: Log in a user
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials

  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get user by ID
      description: Retrieve user details by ID, excluding the password.
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update user by ID
      requestBody:
        description: User details with the new password
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: User updated successfully
        '401':
          description: Unauthorized
    delete:
      summary: Delete user by ID
      description: Requires matching username and password. Also cascades all user authored recipes
      responses:
        '204':
          description: User deleted successfully
        '401':
          description: Unauthorized

  /recipes/all:
    get:
      summary: Get all recipes
      responses:
        '200':
          description: List of recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'

  /recipes/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get recipe by ID
      responses:
        '200':
          description: Recipe details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: Recipe not found
    post:
      summary: Create a new recipe
      requestBody:
        description: Recipe details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: Recipe created successfully
    put:
      summary: Update recipe by ID
      description: Requires credentials of the author user.
      requestBody:
        description: Updated recipe details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          description: Recipe updated successfully
        '401':
          description: Unauthorized
    delete:
      summary: Delete recipe by ID
      responses:
        '204':
          description: Recipe deleted successfully
        '401':
          description: Unauthorized

components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        recipes:
          type: array
          items:
            $ref: '#/components/schemas/Recipe'
    UserRegistration:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    UserUpdate:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Recipe:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
